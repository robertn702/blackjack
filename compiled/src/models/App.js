// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = (function(_super) {
    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.initialize = function() {
      var dealerHand, deck, playerHand;
      this.set('deck', deck = new Deck());
      this.set('playerHand', deck.dealPlayer());
      this.set('dealerHand', deck.dealDealer());
      playerHand = this.get('playerHand');
      dealerHand = this.get('dealerHand');
      playerHand.on('add', (function(_this) {
        return function() {
          var result;
          if (playerHand.minScore() > 21) {
            result = "You lose...";
            if (confirm("" + result + " Start new game?'")) {
              return _this.initialize();
            }
          }
        };
      })(this));
      return playerHand.on('stand', (function(_this) {
        return function() {
          dealerHand.at(0).flip();
          while (Math.max.apply(null, dealerHand.scores()) < 17) {
            dealerHand.hit();
            if (Math.max.apply(null, dealerHand.scores()) > 21) {
              _this.endGame('You lose...');
            }
          }
          if (playerHand.minScore() === Math.max.apply(null, dealerHand.scores())) {
            return _this.endGame("It's a draw,");
          } else if (playerHand.minScore() < Math.max.apply(null, dealerHand.scores())) {
            return _this.endGame('You lose...');
          } else {
            return _this.endGame("You win!");
          }
        };
      })(this));
    };

    App.prototype.endGame = function(result) {
      if (confirm("" + result + " Start new game?")) {
        return this.initialize();
      }
    };

    return App;

  })(Backbone.Model);

}).call(this);

//# sourceMappingURL=App.map
